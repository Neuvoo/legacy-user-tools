#!/bin/bash
# squashfs portage hook
# Jacob Godserv <jacobgodserv@gmail.com>
# 
# Checks for and downloads the latest sqaushfs portage tree image

verbose_redirect="/dev/null"
while [[ "$1" != "" ]]; do
	if [[ "$1" == "--opt" ]]; then
		if [[ "$2" == "--verbose" ]]; then
			verbose_redirect="/dev/tty"
		fi
	elif [[ "$1" == "--action" ]]; then
		:
	elif [[ "$1" == "--target" ]]; then
		:
	else
		ewarn "Unknown hook option: $1 $2"
	fi
	shift 2
done

einfo "Overriding with squashfs sync..."

source "${ROOT}/etc/conf.d/squashfs-portage"

for dir in SQUASHFS_BASEDIR SQUASHFS_MOUNT; do
	if [[ ! -d "${!dir}" ]]; then
		eerror
		eerror "${dir} does not exist or is not a directory:"
		eerror "${!dir}"
		eerror
		exit 1
	fi
done

# make up for time-zone differences by trying tomorrow, today, and then yesterday
dates_to_try=( "$(($(date -u '+%Y%m%d')+1))" )
dates_to_try+=( "$(date -u '+%Y%m%d')" )
dates_to_try+=( "$(($(date -u '+%Y%m%d')-1))" )

for date in ${dates_to_try[@]}; do
	BASENAME="portage-${date}.squashfs"
	URI="${SQUASHFS_BASEURI}/${BASENAME}"
	FILE="${SQUASHFS_BASEDIR}/${BASENAME}"
	if [[ -f "${FILE}" ]]; then
		FETCHCOMMAND="$(source ${ROOT}/etc/make.globals && echo $RESUMECOMMAND)"
	else
		FETCHCOMMAND="$(source ${ROOT}/etc/make.globals && echo $FETCHCOMMAND)"
	fi

	einfo "Retrieving ${URI}..."

	FETCHCOMMAND=$(echo "${FETCHCOMMAND}" | sed 's|"*${DISTDIR}"*|'"${SQUASHFS_BASEDIR}"'|' | sed 's|"*${FILE}"*|'"${BASENAME}"'|' | sed 's|"*${URI}"*|'"${URI}"'|')
	${FETCHCOMMAND} > "${verbose_redirect}" 2>&1
	exit_code="$?"

	if [[ "$exit_code" == "8" ]]; then
		einfo "Date too far into the future; trying again"
		rm -f "${FILE}"
	elif [[ "$exit_code" != "0" ]]; then
		ewarn
		ewarn "wget failed to fetch ${URI}"
		ewarn
	else
		break
	fi
done

if [[ "$exit_code" != "0" ]]; then
	eerror
	eerror "No squashfs images could be found!"
	eerror
	exit "${exit_code}"
fi

einfo "squashfs successfully synced!"

# -f is required on rm to keep rm from dying on a non-existant link
# -f is required on ln to keep ln from dying on an existing link
# May the -f be with them.
if [[ "$(realpath ${SQUASHFS_LATESTSYM} 2> /dev/null)" != "$(realpath ${FILE}  2> /dev/null)" ]]; then
	rm -f "$(realpath ${SQUASHFS_LATESTSYM} 2> /dev/null)" && \
	ln -f -s "${FILE}" "${SQUASHFS_LATESTSYM}"
	exit_code="$?"
fi

if [[ "$exit_code" != "0" ]]; then
	eerror
	eerror "The latest squashfs image could not be moved into place!"
	eerror
	exit "${exit_code}"
fi

einfo "(Re)mounting squashfs..."
"${ROOT}"/usr/lib/squashfs-portage/bin/squashfs-portage-mount --remount
exit_code="$?"
if [[ "$exit_code" != "0" ]]; then
	ewarn
	ewarn "Could not remount the squashfs image. Please execute the following by hand:"
	ewarn "\"${ROOT}/usr/lib/squashfs-portage/bin/squashfs-portage-mount\" --remount"
	ewarn
fi

einfo "Shutting portage down. Portage will report a failure, so any wrapper scripts"
einfo "like eix-sync will fail. For eix, run eix-update instead, after syncing."

kill "${PPID}" # stops portage from --syncing the tree
exit 0

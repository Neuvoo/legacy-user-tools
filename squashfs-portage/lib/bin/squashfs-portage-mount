#!/bin/bash
# squashfs portage tree mount script
# Jacob Godserv <jacobgodserv@gmail.com>
# 
# Mounts, unmounts, and remounts the squashfs portage tree

action="mount"
args=( )
while [[ "$1" != "" ]]; do
	if [[ "$1" == "--mount" ]]; then
		action="mount"
	elif [[ "$1" == "--unmount" ]]; then
		action="unmount"
	elif [[ "$1" == "--remount" ]]; then
		action="remount"
	elif [[ "$1" == "--help" ]]; then
		echo "Usage: $(basename $0) [--mount|--unmount|--remount]"
		echo "Any extra arguments are ignored"
		exit 0
	fi
	shift
done

source "${ROOT}"/usr/lib/portage/bin/isolated-functions.sh || exit 1
source "${ROOT}"/etc/conf.d/squashfs-portage || exit 1

SQUASHFS_ARGS=( "${SQUASHFS_LATESTSYM}" "${SQUASHFS_MOUNT}" -t squashfs -o loop )
SQUASHFS_AUFS_ARGS=( -t aufs -o br="${SQUASHFS_AUFS_RW_MOUNT}":"${SQUASHFS_MOUNT}"=ro none "${SQUASHFS_AUFS_MOUNT}" )

for dir in "${SQUASHFS_AUFS_RW_MOUNT}" "${SQUASHFS_MOUNT}" "${SQUASHFS_AUFS_MOUNT}"; do
	if [[ ! -d "${dir}" ]]; then
		eerror "${dir} does not exist!"
		exit 1
	fi
done

for type in SQUASHFS SQUASHFS_AUFS; do
	
	mountpoint -q "$(eval echo \${${type}_MOUNT})"
	is_not_mounted="$?"
	
	if [[ "${action}" == "remount" || "${action}" == "unmount" ]]; then
		if [[ "${is_not_mounted}" == "0" ]]; then
			umount "$(eval echo \${${type}_MOUNT})" || exit $?
		else
			ewarn "Skipping ${type} unmount, since it's already unmounted"
		fi
	fi

	mountpoint -q "$(eval echo \${${type}_MOUNT})"
	is_not_mounted="$?"

	if [[ "${action}" == "remount" || "${action}" == "mount" ]]; then
		if [[ "${is_not_mounted}" == "1" ]]; then
			mount $(eval echo \${${type}_ARGS[@]}) || exit $?
		else
			ewarn "Skipping ${type} mount, since it's already mounted"
		fi
	fi

done
exit 0
